# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  
  config.vm.define "master" do |vm1|
    vm1.vm.hostname = "master"
    vm1.vm.box = "ubuntu/focal64"
  
    #id and Network
    vm1.vm.network "private_network", ip: "192.168.33.10"

    vm1.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false
      vb.name = "master"
      vb.memory = 2048
      vb.cpus = 2
    end

    vm1.vm.provision "shell", path: "k8s.sh"

    vm1.vm.provision "shell", run: "always", inline: <<-SHELL
     #apt-get update
     docker -v
     kubectl version --client
     #apt-get install -y apache2
    SHELL

  end

  config.vm.define "worker-1" do |vm2|
    vm2.vm.hostname = "worker-1"
    vm2.vm.box = "ubuntu/focal64"
  
    #id and Network
    vm2.vm.network "private_network", ip: "192.168.33.20"

    vm2.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false
      vb.name = "worker-1"
      vb.memory = 2048
      vb.cpus = 2
    end
    
    vm2.vm.provision "shell", path: "k8s.sh"

    vm2.vm.provision "shell", run: "always", inline: <<-SHELL
     #apt-get update
     docker -v
     kubectl version --client
     #apt-get install -y apache2
    SHELL

  end

  config.vm.define "worker-2" do |vm3|
    vm3.vm.hostname = "worker-2"
    vm3.vm.box = "ubuntu/focal64"
  
    #id and Network
    vm3.vm.network "private_network", ip: "192.168.33.30"

    vm3.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false
      vb.name = "worker-2"
      vb.memory = 2048
      vb.cpus = 2
    end
    
    vm3.vm.provision "shell", path: "k8s.sh"

    vm3.vm.provision "shell", run: "always", inline: <<-SHELL
     #apt-get update
     docker -v
     kubectl version --client
     #apt-get install -y apache2
    SHELL

  end
  
end
